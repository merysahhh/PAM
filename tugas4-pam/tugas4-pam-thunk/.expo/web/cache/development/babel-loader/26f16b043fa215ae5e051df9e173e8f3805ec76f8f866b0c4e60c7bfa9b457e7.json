{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nexport var fetchIPRequest = function fetchIPRequest() {\n  return {\n    type: \"FETCH_IP_REQUEST\"\n  };\n};\nexport var fetchIPSuccess = function fetchIPSuccess(data) {\n  return {\n    type: \"FETCH_IP_SUCCESS\",\n    payload: data\n  };\n};\nexport var fetchIPFailure = function fetchIPFailure(error) {\n  return {\n    type: \"FETCH_IP_FAILURE\",\n    payload: error\n  };\n};\nexport var fetchIP = function fetchIP() {\n  return function _callee(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch(fetchIPRequest());\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(\"http://ip-api.com/json/\"));\n          case 4:\n            response = _context.sent;\n            dispatch(fetchIPSuccess(response.data));\n            _context.next = 11;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch(fetchIPFailure(_context.t0.message));\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};","map":{"version":3,"names":["axios","fetchIPRequest","type","fetchIPSuccess","data","payload","fetchIPFailure","error","fetchIP","_callee","dispatch","response","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","get","sent","t0","message","stop","Promise"],"sources":["C:/Users/user/tugas3-pam/page/redux-thunk/Actions.js"],"sourcesContent":["import axios from \"axios\";\n\n// Aksi untuk mengambil data IP\nexport const fetchIPRequest = () => ({\n  type: \"FETCH_IP_REQUEST\",\n});\n\nexport const fetchIPSuccess = (data) => ({\n  type: \"FETCH_IP_SUCCESS\",\n  payload: data,\n});\n\nexport const fetchIPFailure = (error) => ({\n  type: \"FETCH_IP_FAILURE\",\n  payload: error,\n});\n\n// Fungsi async untuk mengambil data IP dari API\nexport const fetchIP = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchIPRequest());\n      const response = await axios.get(\"http://ip-api.com/json/\");\n      dispatch(fetchIPSuccess(response.data));\n    } catch (error) {\n      dispatch(fetchIPFailure(error.message));\n    }\n  };\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAAU;IACnCC,IAAI,EAAE;EACR,CAAC;AAAA,CAAC;AAEF,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,IAAI;EAAA,OAAM;IACvCF,IAAI,EAAE,kBAAkB;IACxBG,OAAO,EAAED;EACX,CAAC;AAAA,CAAC;AAEF,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK;EAAA,OAAM;IACxCL,IAAI,EAAE,kBAAkB;IACxBG,OAAO,EAAEE;EACX,CAAC;AAAA,CAAC;AAGF,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAC3B,OAAO,SAAAC,QAAOC,QAAQ;IAAA,IAAAC,QAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAElBN,QAAQ,CAACT,cAAc,EAAE,CAAC;YAACc,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CACJlB,KAAK,CAACmB,GAAG,CAAC,yBAAyB,CAAC;UAAA;YAArDR,QAAQ,GAAAI,QAAA,CAAAK,IAAA;YACdV,QAAQ,CAACP,cAAc,CAACQ,QAAQ,CAACP,IAAI,CAAC,CAAC;YAACW,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAM,EAAA,GAAAN,QAAA;YAExCL,QAAQ,CAACJ,cAAc,CAACS,QAAA,CAAAM,EAAA,CAAMC,OAAO,CAAC,CAAC;UAAC;UAAA;YAAA,OAAAP,QAAA,CAAAQ,IAAA;QAAA;MAAA;IAAA,yBAAAC,OAAA;EAAA,CAE3C;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}